#include <bits/stdc++.h>
int partition(vector<int> &arr,int s,int e)
{
   int count=0;
   for(int i=s+1;i<=e;i++)
   {
      if(arr[i]<=arr[s])
      {
         count++;
      }
   }
   int pivot=s+count;
   swap(arr[s],arr[pivot]);
   int i=s;
   int j=e;
   while(i<pivot && j>pivot)
   {
      while(arr[i]<=arr[pivot])
      {
         i++;
      }
      while(arr[j]>arr[pivot])
      {
         j--;
      }
      if(i<pivot && j>pivot)
      {
         swap(arr[i],arr[j]);
         i++;
         j--;
      }
   }
   return pivot;
   
}
void quick(vector<int> &arr,int s,int e)
{
   if(s>=e)
   {
      return;
   }
   int pivot=partition(arr,s,e);
   quick(arr,s,pivot-1);
   quick(arr,pivot+1,e);
} 
vector<int> quickSort(vector<int> arr)
{
    int n=arr.size();
    int s=0;
    int e=n-1;
    quick(arr,s,e);
    return arr;
}
